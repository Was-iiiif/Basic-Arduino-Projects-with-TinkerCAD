#include <Servo.h>
#include <LiquidCrystal.h>

// LCD: RS, E, D4, D5, D6, D7
LiquidCrystal lcd(13, 12, 11, 10, 9, 8);

// LDR pins
const int LDR_TL = A4;
const int LDR_TR = A1;
const int LDR_BL = A3;
const int LDR_BR = A2;

// Soil moisture sensor
const int moisturePin = A5; 

// Servo motor
Servo servoX;  // horizontal
Servo servoY;  // vertical

// Water pump simulation (LED)
const int pumpLED = 3;
const int pump=4;

// Initial servo positions
int posX = 90;
int posY = 90;

// Tuning values
const int threshold = 200;  // Light sensitivity threshold
const int stepSize = 5;    // Step movement per loop (can be 1â€“10)


void setup() {
  servoX.attach(5);
  servoY.attach(6);

  servoX.write(posX);
  servoY.write(posY);
  
  lcd.begin(16, 2);
  lcd.setCursor(0,0);
  lcd.print("   PlantBuddy");
  lcd.setCursor(0,1);
  lcd.print("   Stay Green");
  delay(2000);
  lcd.clear();
  
  pinMode(pumpLED, OUTPUT);
  pinMode(pump, OUTPUT);
  digitalWrite(pumpLED, LOW);
  Serial.begin(9600);
}

void loop() {
   // Read LDR values
  int tl = analogRead(LDR_TL);
  int tr = analogRead(LDR_TR);
  int bl = analogRead(LDR_BL);
  int br = analogRead(LDR_BR);

  // Average top, bottom, left, right
  int topAvg = (tl + tr) / 2;
  int bottomAvg = (bl + br) / 2;
  int leftAvg = (tl + bl) / 2;
  int rightAvg = (tr + br) / 2;

  int verticalDiff = topAvg - bottomAvg;
  int horizontalDiff = leftAvg - rightAvg;
  
  // Debug monitor
  Serial.print("Top: "); Serial.print(topAvg);
  Serial.print(" | Bottom: "); Serial.print(bottomAvg);
  Serial.print(" | Left: "); Serial.print(leftAvg);
  Serial.print(" | Right: "); Serial.println(rightAvg);

  // Vertical servo control (Y-axis)
  if (abs(verticalDiff) > threshold) {
    if (verticalDiff > 0) {
      posY = constrain(posY + stepSize, 0, 180); // Move up
    } else {
      posY = constrain(posY - stepSize, 0, 180); // Move down
    }
    servoY.write(posY);
  }

  // Horizontal servo control (X-axis)
  if (abs(horizontalDiff) > threshold) {
    if (horizontalDiff > 0) {
      posX = constrain(posX - stepSize, 0, 180); // Move left
    } else {
      posX = constrain(posX + stepSize, 0, 180); // Move right
    }
    servoX.write(posX);
  }

  delay(250); // Delay for smoother movement
  
 
  // ðŸŒ± Soil Moisture
  int moisture = analogRead(moisturePin);
  bool isDry = moisture < 500;

  // 3. ðŸ’¦ Automatic watering
  if (isDry) {
    digitalWrite(pump, HIGH);
    digitalWrite(pumpLED, HIGH);
    delay(100);
    digitalWrite(pumpLED, LOW);
    delay(100);
  } 
  else {
    digitalWrite(pumpLED, LOW);
    digitalWrite(pump, LOW);

  }
  // ðŸ“Ÿ LCD Display
lcd.setCursor(0, 0);
lcd.print("H:");
lcd.print(posX);
lcd.print("  ");
lcd.print(" V:");
lcd.print(posY);
lcd.print("  ");

lcd.setCursor(0, 1);
lcd.print(isDry ? "Moisture:Dry " : "Moisture: Wet ");
lcd.setCursor(13, 1);
lcd.print(isDry ? "W" : " ");


  delay(1000);
}
